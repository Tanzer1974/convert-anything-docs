name: Update currency rates

permissions:
  contents: write

on:
  schedule:
    # Run once daily at 17:00 UTC (after ECBâ€™s ~16:00 CET update)
    - cron: '0 17 * * *'
  workflow_dispatch: {}

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Fetch rates and write file
        env:
          API_URL: ${{ secrets.API_URL }}
        run: |
          node -e "
          const fs = require('fs');
          const https = require('https');

          function fetchJson(url, headers = {}) {
            return new Promise((resolve, reject) => {
              https.get(url, { headers }, (res) => {
                let data = '';
                res.on('data', (c) => data += c);
                res.on('end', () => {
                  try { resolve(JSON.parse(data)); } catch (e) { reject(e); }
                });
              }).on('error', reject);
            });
          }

          (async () => {
            const url = process.env.API_URL;
            if (!url) throw new Error('API_URL is missing');

            // Frankfurter: { base: 'USD', date: 'YYYY-MM-DD', rates: {...} }
            const data = await fetchJson(url);

            // Normalize to flat { CODE: number } with USD=1
            const out = {};
            if (data && data.rates && typeof data.rates === 'object') {
              for (const k of Object.keys(data.rates)) {
                const code = String(k).toUpperCase();
                const num = Number(data.rates[k]);
                if (Number.isFinite(num)) out[code] = num;
              }
            }
            out.USD = 1;

            const payload = {
              rates: out,
              metadata: {
                timestamp: Date.now(),
                last_updated: new Date().toISOString(),
                source: 'frankfurter',
                version: '1.0.0',
                cache_duration: 86400000,   // 24 hours
                market_status: 'daily'
              }
            };

            fs.writeFileSync('currency-rates-shared/rates.json', JSON.stringify(payload, null, 2) + '\\n');
          })().catch(e => { console.error(e); process.exit(1); });
          "

      - name: Commit and push if changed
        run: |
          git config user.email "${{ secrets.GH_EMAIL }}"
          git config user.name "${{ secrets.GH_NAME }}"
          if ! git diff --quiet; then
            git add currency-rates-shared/rates.json
            git commit -m "chore(rates): update from Frankfurter [skip ci]"
            git push
          else
            echo "No changes in rates.json"
          fi
